#! /usr/bin/vvp
:ivl_version "11.0 (stable)" "(v11_0)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 9;
:vpi_module "/usr/lib/ivl/system.vpi";
:vpi_module "/usr/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/lib/ivl/va_math.vpi";
S_0x558b7a6a8660 .scope module, "tb_add1bit" "tb_add1bit" 2 6;
 .timescale -9 -9;
v0x558b7a6d4dd0_0 .var "a", 3 0;
v0x558b7a6d4eb0_0 .var "b", 3 0;
v0x558b7a6d4f50_0 .var "c_in", 0 0;
v0x558b7a6d5020_0 .net "c_out", 0 0, L_0x558b7a6d7040;  1 drivers
v0x558b7a6d50c0_0 .var/i "i", 31 0;
v0x558b7a6d51b0_0 .net "sum", 3 0, L_0x558b7a6d7710;  1 drivers
S_0x558b7a6a7b20 .scope module, "test_add4bit" "add4bit" 2 15, 3 3 0, S_0x558b7a6a8660;
 .timescale -9 -9;
    .port_info 0 /INPUT 4 "a";
    .port_info 1 /INPUT 4 "b";
    .port_info 2 /INPUT 1 "c_in";
    .port_info 3 /OUTPUT 4 "sum";
    .port_info 4 /OUTPUT 1 "c_out";
v0x558b7a6d47f0_0 .net "a", 3 0, v0x558b7a6d4dd0_0;  1 drivers
v0x558b7a6d48f0_0 .net "b", 3 0, v0x558b7a6d4eb0_0;  1 drivers
v0x558b7a6d49d0_0 .net "c_b", 0 0, L_0x558b7a6d5e50;  1 drivers
v0x558b7a6d4a70_0 .net "c_in", 0 0, v0x558b7a6d4f50_0;  1 drivers
v0x558b7a6d4b10_0 .net "c_out", 0 0, L_0x558b7a6d7040;  alias, 1 drivers
v0x558b7a6d4c50_0 .net "sum", 3 0, L_0x558b7a6d7710;  alias, 1 drivers
L_0x558b7a6d63b0 .part v0x558b7a6d4dd0_0, 0, 2;
L_0x558b7a6d64a0 .part v0x558b7a6d4eb0_0, 0, 2;
L_0x558b7a6d75a0 .part v0x558b7a6d4dd0_0, 2, 2;
L_0x558b7a6d7640 .part v0x558b7a6d4eb0_0, 2, 2;
L_0x558b7a6d7710 .concat8 [ 2 2 0 0], L_0x558b7a6d6270, L_0x558b7a6d7460;
S_0x558b7a6a53a0 .scope module, "f00" "add2bit" 3 10, 4 3 0, S_0x558b7a6a7b20;
 .timescale -9 -9;
    .port_info 0 /INPUT 2 "a";
    .port_info 1 /INPUT 2 "b";
    .port_info 2 /INPUT 1 "c_in";
    .port_info 3 /OUTPUT 2 "sum";
    .port_info 4 /OUTPUT 1 "c_out";
v0x558b7a6d25a0_0 .net "a", 1 0, L_0x558b7a6d63b0;  1 drivers
v0x558b7a6d26a0_0 .net "b", 1 0, L_0x558b7a6d64a0;  1 drivers
v0x558b7a6d2780_0 .net "c_b", 0 0, L_0x558b7a6d5730;  1 drivers
L_0x7f5a5bd6a060 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x558b7a6d2820_0 .net "c_in", 0 0, L_0x7f5a5bd6a060;  1 drivers
v0x558b7a6d28c0_0 .net "c_out", 0 0, L_0x558b7a6d5e50;  alias, 1 drivers
v0x558b7a6d29b0_0 .net "sum", 1 0, L_0x558b7a6d6270;  1 drivers
L_0x558b7a6d5880 .part L_0x558b7a6d63b0, 0, 1;
L_0x558b7a6d59b0 .part L_0x558b7a6d64a0, 0, 1;
L_0x558b7a6d5fe0 .part L_0x558b7a6d63b0, 1, 1;
L_0x558b7a6d6110 .part L_0x558b7a6d64a0, 1, 1;
L_0x558b7a6d6270 .concat8 [ 1 1 0 0], L_0x558b7a6d5350, L_0x558b7a6d5b50;
S_0x558b7a6a8d40 .scope module, "f0" "add1bit" 4 10, 5 1 0, S_0x558b7a6a53a0;
 .timescale -9 -9;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "c_in";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "c_out";
L_0x558b7a6d5250 .functor XOR 1, L_0x558b7a6d5880, L_0x558b7a6d59b0, C4<0>, C4<0>;
L_0x7f5a5bd6a018 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x558b7a6d5350 .functor XOR 1, L_0x558b7a6d5250, L_0x7f5a5bd6a018, C4<0>, C4<0>;
L_0x558b7a6d5440 .functor XOR 1, L_0x558b7a6d5880, L_0x558b7a6d59b0, C4<0>, C4<0>;
L_0x558b7a6d5580 .functor AND 1, L_0x558b7a6d5440, L_0x7f5a5bd6a018, C4<1>, C4<1>;
L_0x558b7a6d56c0 .functor AND 1, L_0x558b7a6d5880, L_0x558b7a6d59b0, C4<1>, C4<1>;
L_0x558b7a6d5730 .functor OR 1, L_0x558b7a6d5580, L_0x558b7a6d56c0, C4<0>, C4<0>;
v0x558b7a6a7fc0_0 .net *"_ivl_0", 0 0, L_0x558b7a6d5250;  1 drivers
v0x558b7a6a9360_0 .net *"_ivl_4", 0 0, L_0x558b7a6d5440;  1 drivers
v0x558b7a6a3d80_0 .net *"_ivl_6", 0 0, L_0x558b7a6d5580;  1 drivers
v0x558b7a6d1600_0 .net *"_ivl_8", 0 0, L_0x558b7a6d56c0;  1 drivers
v0x558b7a6d16e0_0 .net "a", 0 0, L_0x558b7a6d5880;  1 drivers
v0x558b7a6d17f0_0 .net "b", 0 0, L_0x558b7a6d59b0;  1 drivers
v0x558b7a6d18b0_0 .net "c_in", 0 0, L_0x7f5a5bd6a018;  1 drivers
v0x558b7a6d1970_0 .net "c_out", 0 0, L_0x558b7a6d5730;  alias, 1 drivers
v0x558b7a6d1a30_0 .net "sum", 0 0, L_0x558b7a6d5350;  1 drivers
S_0x558b7a6d1b90 .scope module, "f1" "add1bit" 4 11, 5 1 0, S_0x558b7a6a53a0;
 .timescale -9 -9;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "c_in";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "c_out";
L_0x558b7a6d5ae0 .functor XOR 1, L_0x558b7a6d5fe0, L_0x558b7a6d6110, C4<0>, C4<0>;
L_0x558b7a6d5b50 .functor XOR 1, L_0x558b7a6d5ae0, L_0x558b7a6d5730, C4<0>, C4<0>;
L_0x558b7a6d5c80 .functor XOR 1, L_0x558b7a6d5fe0, L_0x558b7a6d6110, C4<0>, C4<0>;
L_0x558b7a6d5cf0 .functor AND 1, L_0x558b7a6d5c80, L_0x558b7a6d5730, C4<1>, C4<1>;
L_0x558b7a6d5de0 .functor AND 1, L_0x558b7a6d5fe0, L_0x558b7a6d6110, C4<1>, C4<1>;
L_0x558b7a6d5e50 .functor OR 1, L_0x558b7a6d5cf0, L_0x558b7a6d5de0, C4<0>, C4<0>;
v0x558b7a6d1d40_0 .net *"_ivl_0", 0 0, L_0x558b7a6d5ae0;  1 drivers
v0x558b7a6d1e20_0 .net *"_ivl_4", 0 0, L_0x558b7a6d5c80;  1 drivers
v0x558b7a6d1f00_0 .net *"_ivl_6", 0 0, L_0x558b7a6d5cf0;  1 drivers
v0x558b7a6d1fc0_0 .net *"_ivl_8", 0 0, L_0x558b7a6d5de0;  1 drivers
v0x558b7a6d20a0_0 .net "a", 0 0, L_0x558b7a6d5fe0;  1 drivers
v0x558b7a6d21b0_0 .net "b", 0 0, L_0x558b7a6d6110;  1 drivers
v0x558b7a6d2270_0 .net "c_in", 0 0, L_0x558b7a6d5730;  alias, 1 drivers
v0x558b7a6d2310_0 .net "c_out", 0 0, L_0x558b7a6d5e50;  alias, 1 drivers
v0x558b7a6d23b0_0 .net "sum", 0 0, L_0x558b7a6d5b50;  1 drivers
S_0x558b7a6d2b10 .scope module, "f11" "add2bit" 3 11, 4 3 0, S_0x558b7a6a7b20;
 .timescale -9 -9;
    .port_info 0 /INPUT 2 "a";
    .port_info 1 /INPUT 2 "b";
    .port_info 2 /INPUT 1 "c_in";
    .port_info 3 /OUTPUT 2 "sum";
    .port_info 4 /OUTPUT 1 "c_out";
v0x558b7a6d4250_0 .net "a", 1 0, L_0x558b7a6d75a0;  1 drivers
v0x558b7a6d4350_0 .net "b", 1 0, L_0x558b7a6d7640;  1 drivers
v0x558b7a6d4430_0 .net "c_b", 0 0, L_0x558b7a6d6950;  1 drivers
v0x558b7a6d44d0_0 .net "c_in", 0 0, L_0x558b7a6d5e50;  alias, 1 drivers
v0x558b7a6d45c0_0 .net "c_out", 0 0, L_0x558b7a6d7040;  alias, 1 drivers
v0x558b7a6d46b0_0 .net "sum", 1 0, L_0x558b7a6d7460;  1 drivers
L_0x558b7a6d6aa0 .part L_0x558b7a6d75a0, 0, 1;
L_0x558b7a6d6bd0 .part L_0x558b7a6d7640, 0, 1;
L_0x558b7a6d71d0 .part L_0x558b7a6d75a0, 1, 1;
L_0x558b7a6d7300 .part L_0x558b7a6d7640, 1, 1;
L_0x558b7a6d7460 .concat8 [ 1 1 0 0], L_0x558b7a6d6600, L_0x558b7a6d6d70;
S_0x558b7a6d2d10 .scope module, "f0" "add1bit" 4 10, 5 1 0, S_0x558b7a6d2b10;
 .timescale -9 -9;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "c_in";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "c_out";
L_0x558b7a6d6590 .functor XOR 1, L_0x558b7a6d6aa0, L_0x558b7a6d6bd0, C4<0>, C4<0>;
L_0x7f5a5bd6a0a8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x558b7a6d6600 .functor XOR 1, L_0x558b7a6d6590, L_0x7f5a5bd6a0a8, C4<0>, C4<0>;
L_0x558b7a6d66c0 .functor XOR 1, L_0x558b7a6d6aa0, L_0x558b7a6d6bd0, C4<0>, C4<0>;
L_0x558b7a6d67d0 .functor AND 1, L_0x558b7a6d66c0, L_0x7f5a5bd6a0a8, C4<1>, C4<1>;
L_0x558b7a6d68e0 .functor AND 1, L_0x558b7a6d6aa0, L_0x558b7a6d6bd0, C4<1>, C4<1>;
L_0x558b7a6d6950 .functor OR 1, L_0x558b7a6d67d0, L_0x558b7a6d68e0, C4<0>, C4<0>;
v0x558b7a6d2ef0_0 .net *"_ivl_0", 0 0, L_0x558b7a6d6590;  1 drivers
v0x558b7a6d2ff0_0 .net *"_ivl_4", 0 0, L_0x558b7a6d66c0;  1 drivers
v0x558b7a6d30d0_0 .net *"_ivl_6", 0 0, L_0x558b7a6d67d0;  1 drivers
v0x558b7a6d31c0_0 .net *"_ivl_8", 0 0, L_0x558b7a6d68e0;  1 drivers
v0x558b7a6d32a0_0 .net "a", 0 0, L_0x558b7a6d6aa0;  1 drivers
v0x558b7a6d33b0_0 .net "b", 0 0, L_0x558b7a6d6bd0;  1 drivers
v0x558b7a6d3470_0 .net "c_in", 0 0, L_0x7f5a5bd6a0a8;  1 drivers
v0x558b7a6d3530_0 .net "c_out", 0 0, L_0x558b7a6d6950;  alias, 1 drivers
v0x558b7a6d35f0_0 .net "sum", 0 0, L_0x558b7a6d6600;  1 drivers
S_0x558b7a6d37e0 .scope module, "f1" "add1bit" 4 11, 5 1 0, S_0x558b7a6d2b10;
 .timescale -9 -9;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /INPUT 1 "c_in";
    .port_info 3 /OUTPUT 1 "sum";
    .port_info 4 /OUTPUT 1 "c_out";
L_0x558b7a6d6d00 .functor XOR 1, L_0x558b7a6d71d0, L_0x558b7a6d7300, C4<0>, C4<0>;
L_0x558b7a6d6d70 .functor XOR 1, L_0x558b7a6d6d00, L_0x558b7a6d6950, C4<0>, C4<0>;
L_0x558b7a6d6e70 .functor XOR 1, L_0x558b7a6d71d0, L_0x558b7a6d7300, C4<0>, C4<0>;
L_0x558b7a6d6ee0 .functor AND 1, L_0x558b7a6d6e70, L_0x558b7a6d6950, C4<1>, C4<1>;
L_0x558b7a6d6fd0 .functor AND 1, L_0x558b7a6d71d0, L_0x558b7a6d7300, C4<1>, C4<1>;
L_0x558b7a6d7040 .functor OR 1, L_0x558b7a6d6ee0, L_0x558b7a6d6fd0, C4<0>, C4<0>;
v0x558b7a6d3990_0 .net *"_ivl_0", 0 0, L_0x558b7a6d6d00;  1 drivers
v0x558b7a6d3a70_0 .net *"_ivl_4", 0 0, L_0x558b7a6d6e70;  1 drivers
v0x558b7a6d3b50_0 .net *"_ivl_6", 0 0, L_0x558b7a6d6ee0;  1 drivers
v0x558b7a6d3c40_0 .net *"_ivl_8", 0 0, L_0x558b7a6d6fd0;  1 drivers
v0x558b7a6d3d20_0 .net "a", 0 0, L_0x558b7a6d71d0;  1 drivers
v0x558b7a6d3e30_0 .net "b", 0 0, L_0x558b7a6d7300;  1 drivers
v0x558b7a6d3ef0_0 .net "c_in", 0 0, L_0x558b7a6d6950;  alias, 1 drivers
v0x558b7a6d3f90_0 .net "c_out", 0 0, L_0x558b7a6d7040;  alias, 1 drivers
v0x558b7a6d4030_0 .net "sum", 0 0, L_0x558b7a6d6d70;  1 drivers
    .scope S_0x558b7a6a8660;
T_0 ;
    %pushi/vec4 0, 0, 1;
    %cassign/vec4 v0x558b7a6d4f50_0;
    %vpi_call 2 20 "$dumpfile", "tb_add4bit.vcd" {0 0 0};
    %vpi_call 2 21 "$dumpvars", 32'sb00000000000000000000000000000000, S_0x558b7a6a8660 {0 0 0};
    %vpi_call 2 22 "$monitor", "0x%0h + 0x%0h = 0x%0h (carry = %d)", v0x558b7a6d4dd0_0, v0x558b7a6d4eb0_0, v0x558b7a6d51b0_0, v0x558b7a6d5020_0 {0 0 0};
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x558b7a6d50c0_0, 0, 32;
T_0.0 ;
    %load/vec4 v0x558b7a6d50c0_0;
    %cmpi/s 256, 0, 32;
    %jmp/0xz T_0.1, 5;
    %load/vec4 v0x558b7a6d50c0_0;
    %pad/s 8;
    %split/vec4 4;
    %store/vec4 v0x558b7a6d4eb0_0, 0, 4;
    %store/vec4 v0x558b7a6d4dd0_0, 0, 4;
    %load/vec4 v0x558b7a6d5020_0;
    %store/vec4 v0x558b7a6d4f50_0, 0, 1;
    %delay 10, 0;
    %load/vec4 v0x558b7a6d50c0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x558b7a6d50c0_0, 0, 32;
    %jmp T_0.0;
T_0.1 ;
    %vpi_call 2 31 "$display", "success." {0 0 0};
    %end;
    .thread T_0;
# The file index is used to find the file name in the following table.
:file_names 6;
    "N/A";
    "<interactive>";
    "tb_add4bit.v";
    "./add4bit.v";
    "./add2bit.v";
    "./add1bit.v";
